# from rest_framework.response import Response
# from rest_framework.views import APIView
# from rest_framework import status

# from rest_framework_simplejwt.tokens import RefreshToken

# def get_tokens_for_user(user):
#     refresh = RefreshToken.for_user(user)

#     return {
#         'refresh': str(refresh),
#         'access': str(refresh.access_token),
#     } 

# class UserRegisterView(APIView):
#     def post(self, request):
#         serializers = UserRegisterSerializers(data=request.data)
#         if serializers.is_valid():
#             user = serializers.save()
#             token = get_tokens_for_user(user)
#             return Response({"token": token, "msg": "registration successfull"}, status=status.HTTP_201_CREATED)
#         return Response({"errormsg": "registration successfull"}, status=status.HTTP_201_CREATED)
        

# from rest_framework import serializers
# from .models import User

# class UserRegisterSerializers(serializers.ModelSerializer):
#     class Meta:
#         model = User

#         fields = ['email', 'name', 'tc', 'password', 'password2']

#     def validate(self, attrs):
#         password = serializers.attrs.get('password')
#         password2 = serializers.attrs.get('password2')
        
#         if password != password2:
#             raise serializers.ValidationError('Password and confirm password doesnot match')
#         return attrs
    
#     def create(self, validated_data):
#         return User.objects.create_user(**validated_data)